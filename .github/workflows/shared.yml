
name: Build and deploy

on:
  workflow_call:
    inputs:
      env:
        required: true
        type: string
    
env:
  ENV: ${{inputs.env}}
  NODE_VERSION: '18.x'
  ARM_CLIENT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
  ARM_CLIENT_SECRET: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}
  ARM_SUBSCRIPTION_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}
  ARM_TENANT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}

jobs:
  terraform:
   name: "Terraform"
   runs-on: ubuntu-latest
   defaults:
     run:
       shell: bash
       working-directory: ./terraform
 
   steps:
     - name: Checkout the repository to the runner
       uses: actions/checkout@v4

    #  - name: Create backend.conf file
    #    run: |
    #      chmod +x ../scripts/create-backend-conf.sh
    #      ../scripts/create-backend-conf.sh ${{ vars.APP_NAME }} ${{ env.ENV }} ${{ vars.STORAGE_ACCOUNT }}

    #  - name: Setup Terraform with specified version on the runner
    #    uses: hashicorp/setup-terraform@v3
    
    #  - name: Terraform init
    #    id: init
    #    run: terraform init -backend-config=backend.conf

    #  - uses: terraform-linters/setup-tflint@v3
    #    name: Setup TFLint
         
    #  - name: Run TFLint
    #    run: tflint -f compact
 
    #  - name: Terraform Apply
    #    run: terraform apply -var env=${{ env.ENV }} -var app_name=${{ vars.APP_NAME }} -auto-approve

  deploy:
    name: 'Build and deploy'
    runs-on: ubuntu-latest
    needs: terraform
    defaults:
      run:
        shell: bash
        working-directory: ./Sample.API
    steps:
      - name: Azure Login
        uses: azure/login@v1.4.6
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Checkout GitHub Action
        uses: actions/checkout@v4

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3

      - name: dotnet build and publish
        run: |
          dotnet restore
          dotnet build --configuration Release
          dotnet publish -c Release -o ./

      - name: 'Run Azure webapp deploy action'
        run: az webapp up --name app-svc-${{ vars.APP_NAME }}-${{ env.ENV }} --os-type linux
  
        # uses: azure/webapps-deploy@v3
        # with: 
        #   app-name: 'app-svc-mytestapp-prod'
        #   package: .
          

      

          

